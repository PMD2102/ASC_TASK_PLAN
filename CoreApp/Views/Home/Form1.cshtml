@{
    ViewData["Title"] = "Form";
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<style>
    div.ex1 {
        width: 700px;
        height: 700px;
        overflow: scroll;
    }
</style>
<h1> BÁO CÁO HIỆU SUẤT </h1>
<br />

<div class="container">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="solid">
                <span> Năm </span>
                @(Html.Kendo().DropDownList()
                    .Name("dropdownlistNam")
                    .DataTextField("tenNam")
                    .DataValueField("nam")
                    .DataSource(source => {
                        source.Read(read =>
                        {
                            read.Action("DanhSachNamThongKe", "ThongKe");
                        });
                    })
                    .HtmlAttributes(new { style = "margin-left : 40px" })
                )
                <span style="margin-left:120px;"> Tháng </span>
                @(Html.Kendo().DropDownList()
                    .Name("dropdownlistThang")
                    .DataTextField("TenThang")
                    .DataValueField("GiaTri")
                    .DataSource(source => source
                        .Custom()
                        .ServerFiltering(true)
                        .Transport(transport => transport
                        .Read(read =>
                        {
                            read.Action("DanhSachThangTrongNam", "Thang").Data("filterYear"); ;
                        }))
                        )
                    .Enable(false)
                    .AutoBind(false)
                    .CascadeFrom("dropdownlistNam")
                    .HtmlAttributes(new { style ="margin-left : 40px"})
                )

                <button type="button" id="TimKiem" name="TimKiem" class="k-button" style="margin-left:60px;" onclick="drawStuff()"> Tìm Kiếm </button>
                <br />
                <br />
            </div>
        </div>
    </div>
    <center>
        <div class="ex1">
            <div id="chart_div" style="width: 1000px; height: 700px;"></div>
        </div>
    </center>
    <br />
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

            <div data-role="grid" class="k-grid k-widget k-grid-display-block">

                <table name="gridThongKe">
                    <thead class="k-grid-header" role="rowgroup">
                        <tr class="k-master-row" id="testTuan">
                            <th class="k-grid-header" colspan="2" role="columnheader"> Thống kê theo tháng <br /> </th>
                            @for (int i = 0; i < ViewBag.DanhSachTuan.Count; i++)
                            {
                                <th class="k-grid-header" colspan="2" role="columnheader"> @ViewBag.DanhSachTuan[i].TenTuan <br />  @ViewBag.DanhSachTuan[i].TuNgay.Date.ToString("dd/MM") - @ViewBag.DanhSachTuan[i].DenNgay.Date.ToString("dd/MM")</th>
                            }
                        </tr>

                    </thead>
                    <tbody role="rowgroup">
                    <thead>
                        <tr class="k-master-row" id="testTuan1">
                            <th class="k-grid-header" role="columnheader"> STT </th>
                            <th class="k-grid-header" role="columnheader"> Nhân Sự</th>
                            @for (int i = 0; i < ViewBag.DanhSachTuan.Count; i++)
                            {
                                <th class="k-grid-header">Số giờ</th>
                                <th class="k-grid-header">% Hoàn Thành</th>

                            }
                        </tr>
                    </thead>

                    <thead id="testTuan2">
                        @for (int j = 0; j < ViewBag.SoLuongNhanSu; j++)
                        {
                            int stt = j;
                            int stt1 = j + 1;
                            <tr class="k-master-row" role="row">
                                <td> @stt1</td>
                                <td> @ViewBag.DanhSachThongKe[j].tenNhanVien</td>
                                @for (int k = 0; k < ViewBag.DanhSachTuan.Count; k++)
                                {
                                    @if (ViewBag.DanhSachThongKe[stt].idTuan == ViewBag.DanhSachTuan[k].Id)
                                    {
                                        float hoanThanh = ((float)ViewBag.DanhSachThongKe[stt].soGioLam / ViewBag.DanhSachTuan[k].SoGioLam) * 100;
                                        <td> @ViewBag.DanhSachTuan[k].SoGioLam </td>
                                        <td> @hoanThanh </td>
                                        stt += ViewBag.SoLuongNhanSu;
                                    }
                                }

                            </tr>
                        }
                    </thead>

                    </tbody>
                </table>
            </div>
            <br />
            @*<input type="number" id="idTrang" name="idTrang" value="1" onchange="drawStuff()" />*@
        </div>
    </div>
</div>
<script>

    function filterYear() {

        return {
            dropdownlistNam: $("#dropdownlistNam").val()
        };
    }

    function onReadDataNgay()
    {
        return {
            nam: $("#dropdownlistNam").val(),
            thang: $("#dropdownlistThang").val()
        }

        //return `{nam: ${$("#dropdownlistNam").val()}, thang: ${$("#dropdownlistThang").val()} }`
    }

    $("#TimKiem").click(function () {
        console.log("alo alo");
        console.log(onReadDataNgay());
        $.ajax({
            url: '@Url.Action("Test", "ThongKe")',
            data: onReadDataNgay(),
            type: "GET",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (res) {
                console.log("res :", res);
                $('#testTuan2 tr').each((e, data) => {
                    if (e > -1) {
                        data.remove()
                    }
                })
                $('#testTuan th').each((e, data) => {
                    if (e != 0) {
                        data.remove()
                    }
                })

                res.danhSachTuan.forEach(e => {
                    $('#testTuan').append(`<th class="k-grid-header" colspan="2" role="columnheader">${e.TenTuan} <br/> ${moment(e.TuNgay).format('DD/MM')} - ${moment(e.DenNgay).format('DD/MM')}</th>`)
                })

                $('#testTuan1 th').each((e, data) => {
                    if (e > -1) {
                        data.remove()
                    }
                })
                $('#testTuan1').append("<th class='k-grid-header' role = 'columnheader' > STT </th> <th class='k-grid-header' role = 'columnheader'> Nhân sự </th >")
                res.danhSachTuan.forEach(e => {
                    $('#testTuan1').append(" <th class='k-grid-header'> Số giờ </th> <th class='k-grid-header'> % Hoàn thành </th>")
                })

                $('#testTuan2 tr td').each((e, data) => {
                    if (e > -1) {
                        data.remove()
                    }
                })

                var soLuong = res.soLuongNhanSu;
                var soLuongTuan = res.soLuongTuan;
                for (var i = 0; i < soLuong; i++)
                {
                    var  stt = i;
                    var stt1 = i + 1;
                    $('#testTuan2').append(`<tr class='a${i}'> <td> ${i + 1} </td> <td> ${res.thongKemOdel[i].tenNhanVien} </td> </tr>`)
                    for (var j = 0; j < soLuongTuan; j++) {
                        if (res.thongKemOdel[stt].idTuan == res.danhSachTuan[j].Id) {
                            var x = (res.thongKemOdel[stt].soGioLam / res.danhSachTuan[j].SoGioLam) * 100;
                            $(`#testTuan2 tr.a${i}`).append(`<td> ${res.danhSachTuan[j].SoGioLam} </td> <td> ${x} </td >`)
                            stt += soLuong;
                        }
                    }

                }


            }
        })

        @*$.ajax({
            url: '@Url.Action("TableThongKe", "ThongKe")',
            data: onReadDataNgay(),
            type: "GET",
        })*@
    })

    function onReadDataNgayBieuDo() {
        return {
            nam: $("#dropdownlistNam").val(),
            thang: $("#dropdownlistThang").val(),
            @*idTrang: $("#idTrang").val()*@
        }

    }
      google.charts.load('current', {'packages':['corechart', 'bar']});
      google.charts.setOnLoadCallback(drawStuff);

    function drawStuff() {
        var button = document.getElementById('change-chart');
        var chartDiv = document.getElementById('chart_div');
        $.ajax({
        url: '@Url.Action("ThongKeBieuDo", "ThongKe")',
            traditional: true,
            data: onReadDataNgayBieuDo(),
            success: function (result) {
                console.log("abcxyz", result.length);
                var data = google.visualization.arrayToDataTable([]);
                data.addColumn('string', 'Thống Kê');
                data.addColumn('number', 'Số Giờ');
                data.addColumn('number', 'Hoàn Thành');
                for (var i = 0; i < result.length; i++) {
                    data.addRow([result[i].tenNhanVien, { v: result[i].soGioLam }, result[i].phanTram]);
                }

                var materialOptions = {
                    width: 900,
                    chart: {
                        title: 'Thống kê theo tháng',
                        subtitle: 'Số giờ bên trái , Hoàn thành bên phải'
                    },
                    series: {
                        0: { axis: 'Số Giờ' },
                        1: { axis: 'Hoàn Thành' }
                    },
                    axes: {
                        y: {
                            distance: { label: 'parsecs' },
                            brightness: { side: 'right', label: 'apparent magnitude' }
                        }
                    }
                };

                var classicOptions = {
                    width: 400,
                    series: {
                        0: { targetAxisIndex: 0 },
                        1: { targetAxisIndex: 1 }
                    },
                    title: 'Nearby galaxies - distance on the left, brightness on the right',
                    vAxes: {
                        0: { title: 'parsecs' },
                        1: { title: 'apparent magnitude' }
                    }
                };

                function drawMaterialChart() {
                    var materialChart = new google.charts.Bar(chartDiv);
                    materialChart.draw(data, google.charts.Bar.convertOptions(materialOptions));

                }

                function drawClassicChart() {
                    var classicChart = new google.visualization.ColumnChart(chartDiv);
                    classicChart.draw(data, classicOptions);

                }

                drawMaterialChart();
        },
        })

    };
</script>

