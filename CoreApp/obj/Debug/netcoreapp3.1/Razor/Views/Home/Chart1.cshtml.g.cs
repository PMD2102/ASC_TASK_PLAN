#pragma checksum "D:\ASC_Task_Planning_V9\ASC_Task_Planning\ASC_TASK_PLAN\CoreApp\Views\Home\Chart1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d27e2305b54bc5aac868f8701023ef6925b3b247"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Chart1), @"mvc.1.0.view", @"/Views/Home/Chart1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ASC_Task_Planning_V9\ASC_Task_Planning\ASC_TASK_PLAN\CoreApp\Views\_ViewImports.cshtml"
using CoreApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ASC_Task_Planning_V9\ASC_Task_Planning\ASC_TASK_PLAN\CoreApp\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d27e2305b54bc5aac868f8701023ef6925b3b247", @"/Views/Home/Chart1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"37e33255dd0f58295d578403c46696e37e808753", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Chart1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\ASC_Task_Planning_V9\ASC_Task_Planning\ASC_TASK_PLAN\CoreApp\Views\Home\Chart1.cshtml"
  
    ViewData["Title"] = "Chart";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<div class=\"container-fluid\">\n    <div class=\'row my-4\'>\n        <div class=\'col-12 col-lg-9 border-right\'>\n            ");
#nullable restore
#line 8 "D:\ASC_Task_Planning_V9\ASC_Task_Planning\ASC_TASK_PLAN\CoreApp\Views\Home\Chart1.cshtml"
        Write(Html.Kendo().Chart()
                .Name("chart")
                .Theme("sass")
                .Legend(legend => legend
                    .Position(ChartLegendPosition.Bottom)
                )
                .Series(series => {
                    series.Pie(new dynamic[] {                        
                        new { category = "Europe", value = 0.3 },
                        new { category = "North America", value = 0.23 },
                        new { category = "Australia", value = 0.18 },
                        new { category = "Asia", value = 0.15 },
                        new { category = "South America", value = 0.09 },
                        new { category = "Africa", value = 0.05 }
                    })
                    .AutoFit()
                    .Connectors(c=>c.Color("transparent"))
                    .Labels(labels => labels
                        .Distance(30)
                        .Position(ChartSeriesLabelsPosition.Above)
                        .Format("{0:p0}")
                        .Visible(true)
                    );
                })
            );

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        </div>
        <div class='col-12 col-lg-3 mt-3 mt-lg-0'>
            <h3>Telerik UI for ASP.NET Core Chart</h3>
            <p>
                The Telerik UI for ASP.NET Core Charts provide high quality graphical data visualization options.
            </p>
            <p>
                They include a variety of chart types and styles that have extensive configuration options. 
            </p>
            <p>
                The Telerik UI for ASP.NET Core Chart Component is rendered completely through JavaScript, making it server-platform agnostic and boosting the performance of your application.

                By default the Core Chart control is powered by Scalable Vector Graphics (SVG), enabling animations and interactivity in modern browsers with a fallback to Vector Markup Language (VML) for older browsers. Canvas rendering is also supported when a higher fps rate is required for frequent/live data updates.
            </p>
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
